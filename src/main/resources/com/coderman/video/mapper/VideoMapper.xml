<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderman.video.mapper.VideoMapper">
  <resultMap id="BaseResultMap" type="com.coderman.video.model.Video">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="cover_url" jdbcType="VARCHAR" property="coverUrl" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="is_published" jdbcType="TINYINT" property="isPublished" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.coderman.video.model.Video">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, category_id, title, cover_url, video_url, duration, is_published, created_at,
    updated_at
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>

  <sql id="pageWhere">
    <where>
      <if test="name != null and name !=''">
        <choose>
          <when test="name == 'all'">
            AND 1 = 1
          </when>
          <otherwise>
            AND category.name = #{name}
          </otherwise>
        </choose>
      </if>
      <if test="keyword != null and keyword != ''">
        AND video.title LIKE CONCAT('%', #{keyword}, '%')
      </if>
      AND video.is_published = 1
    </where>
  </sql>

  <!-- 查询分页数据 -->
  <select id="selectVideoPage" resultType="com.coderman.video.vo.VideoVO">
    SELECT
    video.id,
    video.category_id,
    video.title,
    video.description,
    video.cover_url as cover
    FROM
    video
    left join category on video.category_id = category.id
    <include refid="pageWhere"/>
    ORDER BY video.created_at DESC
    LIMIT #{size} OFFSET #{offset}
  </select>

  <select id="selectFirstPage" resultType="com.coderman.video.vo.VideoVO">
    SELECT
    video.id,
    video.category_id,
    video.title,
    video.description,
    video.cover_url as cover
    FROM
    video
    left join category on video.category_id = category.id
    <include refid="pageWhere"/>
    ORDER BY video.created_at DESC
    LIMIT #{size}
  </select>

  <!-- 查询总数量 -->
  <select id="countVideoPage" resultType="long">
    SELECT COUNT(1)
    FROM video
    left join category on video.category_id = category.id
    <include refid="pageWhere"/>
  </select>


</mapper>
